name: Docker Build Images

concurrency:
    group: build-docker-${{ github.ref }}
    cancel-in-progress: ${{ github.event_name == 'pull_request' }}
on:
    schedule:
        - cron: '0 0 * * *'
    workflow_dispatch:
        inputs:
            version:
                description: 'Keycloak version'
                required: true
                type: string
jobs:
    build-and-push:
        runs-on: ubuntu-latest
        timeout-minutes: 16
        steps:
            - uses: actions/checkout@v3
            
            - name: Determine Keycloak version
              id: version
              run: |
                if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ inputs.version }}" ]; then
                  # Manual trigger with specified version
                  VERSION="${{ inputs.version }}"
                  echo "Using manually specified version: $VERSION"
                else
                  # Auto-detect latest version
                  VERSION=$(curl -s https://api.github.com/repos/keycloak/keycloak/releases/latest | jq -r .tag_name)
                  echo "Auto-detected latest version: $VERSION"
                fi
                echo "version=$VERSION" >> $GITHUB_OUTPUT
            
            - name: Check if version already built
              id: check
              run: |
                # Check if this version was already built
                if gh release view "${{ steps.version.outputs.version }}" --repo ${{ github.repository }} 2>/dev/null; then
                  echo "Version ${{ steps.version.outputs.version }} already exists"
                  echo "exists=true" >> $GITHUB_OUTPUT
                else
                  echo "Version ${{ steps.version.outputs.version }} is new"
                  echo "exists=false" >> $GITHUB_OUTPUT
                fi
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Skip if already built
              if: steps.check.outputs.exists == 'true' && github.event_name == 'schedule'
              run: |
                echo "Version ${{ steps.version.outputs.version }} already built. Skipping."
                exit 0
                
            - name: Set up QEMU
              if: steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              if: steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
              uses: docker/setup-buildx-action@v2
              with:
                  version: v0.9.1
            - name: Login to docker ghcr.io registry
              if: steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  
            - name: Docker keycloak  meta
              id: keycloak
              uses: docker/metadata-action@v5
              if: steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
              with:
                    images: |
                        ghcr.io/edisonjwa/keycloak
                    labels: |
                        org.opencontainers.image.description=Open Source Identity and Access Management
                        org.opencontainers.image.title=Keycloak
                        org.opencontainers.image.version=${{ inputs.version }}
                        
            -   name: Print the  build options without build
                env:
                    VERSION: "${{ inputs.version }}"
                    TAG: "ghcr.io/edisonjwa/keycloak:${{ inputs.version }}"
                if: steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
                run: |
                    cat "${{ steps.keycloak.outputs.bake-file }}"
                    docker buildx bake  -f docker-bake.hcl -f "${{ steps.keycloak.outputs.bake-file }}" --print
            -   name: Bake keycloak and push
                uses: docker/bake-action@v4
                if: (steps.check.outputs.exists == 'false' || github.event_name == 'workflow_dispatch') && github.event_name != 'pull_request'
                env:
                    VERSION: "${{ inputs.version }}"
                    TAG: "ghcr.io/edisonjwa/keycloak:${{ inputs.version }}"
                with:
                    files: |
                        ./docker-bake.hcl
                        ${{ steps.keycloak.outputs.bake-file }}
                    push: true
